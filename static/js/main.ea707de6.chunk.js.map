{"version":3,"sources":["components/UI/Button.js","components/UI/Wrapper.js","components/Game/StatsBoard.js","components/Game/Square.js","components/Game/Table.js","components/Game/Game.js","App.js","index.js"],"names":["Button","props","className","onClick","onClickHandle","content","Wrapper","children","StatsBoard","gameStats","gamesPlayed","gamesWonByX","gamesWonBy0","ties","Square","clickHandle","value","Table","board","map","el","idx","handleClick","INITIAL_BOARD","Game","useState","isGameOver","setIsGameOver","player","setPlayer","setBoard","checkTie","filter","length","useEffect","i","checkWinningState","verdict","updateStatsHandler","prev","slice","App","setGameStats","result","prevStats","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea707de6.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Button = (props) => {\n  return (\n    <button className=\"button\" onClick={props.onClickHandle}>\n      {props.content}\n    </button>\n  );\n};\n","export const Wrapper = (props) => {\n  return <div className=\"wrapper\">{props.children}</div>;\n};\n","import React from \"react\";\n\nexport const StatsBoard = (props) => {\n  return (\n    <div className=\"stats-container\">\n      <p> Games played: {props.gameStats.gamesPlayed}</p>\n      <p> Games won by X: {props.gameStats.gamesWonByX}</p>\n      <p> Games won by 0: {props.gameStats.gamesWonBy0}</p>\n      <p> Games tied: {props.gameStats.ties}</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const Square = ({ clickHandle, value }) => {\n  return (\n    <div\n      className=\"item\"\n      onClick={() => {\n        clickHandle();\n      }}\n    >\n      {value}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Square } from \"./Square\";\n\nfunction Table(props) {\n  return (\n    <div className=\"game-container\">\n      {props.board.map((el, idx) => (\n        <Square\n          key={idx}\n          clickHandle={() => {\n            props.handleClick(idx);\n          }}\n          value={props.board[idx]}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Table;\n","import React, { useState, useEffect } from \"react\";\nimport { Button } from \"../UI/Button\";\nimport { Wrapper } from \"../UI/Wrapper\";\nimport { StatsBoard } from \"./StatsBoard\";\nimport Table from \"./Table\";\n\nconst INITIAL_PLAYER = \"X\";\nconst INITIAL_BOARD = [null, null, null, null, null, null, null, null, null];\n\nexport const Game = (props) => {\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [player, setPlayer] = useState(INITIAL_PLAYER);\n  const [board, setBoard] = useState(INITIAL_BOARD);\n\n  const checkTie = () => {\n    return board.filter((el) => el !== null).length === INITIAL_BOARD.length;\n  };\n\n  const resetGame = () => {\n    let verdict = null;\n    if (isGameOver) {\n      verdict = player === \"X\" ? \"WIN_0\" : \"WIN_X\";\n    } else if (checkTie()) {\n      verdict = \"TIE\";\n    }\n    props.updateStatsHandler(verdict);\n    setBoard(INITIAL_BOARD);\n    setPlayer(INITIAL_PLAYER);\n    setIsGameOver(false);\n  };\n\n  useEffect(() => {\n    const checkWinningState = () => {\n      // checking horizontal lines\n      for (let i = 0; i <= 6; i += 3) {\n        if (board[i]) {\n          if (board[i] === board[i + 1] && board[i + 1] === board[i + 2]) {\n            setIsGameOver(true);\n            return;\n          }\n        }\n      }\n      // checking vertical lines\n      for (let i = 0; i <= 2; ++i) {\n        if (board[i]) {\n          if (board[i] === board[i + 3] && board[i + 3] === board[i + 6]) {\n            setIsGameOver(true);\n            return;\n          }\n        }\n      }\n      // checking diagonal lines\n      if (board[4]) {\n        if (board[0] === board[4] && board[4] === board[8]) {\n          setIsGameOver(true);\n          return;\n        }\n\n        if (board[2] === board[4] && board[4] === board[6]) {\n          setIsGameOver(true);\n          return;\n        }\n      }\n    };\n\n    checkWinningState();\n  }, [board, player]);\n\n  const handleClick = (idx) => {\n    if (!board[idx] && !isGameOver) {\n      setPlayer((prev) => {\n        prev === \"X\" ? setPlayer(\"O\") : setPlayer(\"X\");\n      });\n      setBoard((prev) => {\n        return [...prev.slice(0, idx), player, ...prev.slice(idx + 1)];\n      });\n    }\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <StatsBoard gameStats={props.gameStats} />\n        <div className=\"info-container\">\n          {isGameOver && (\n            <div>\n              <p>Game Over!</p>\n              <h1>{\"Player \" + (player === \"X\" ? \"0\" : \"X\") + \" wins!\"}</h1>\n            </div>\n          )}\n          {!isGameOver && !checkTie() && <h1>Current Player: {player}</h1>}\n          {!isGameOver && checkTie() && (\n            <div>\n              <p>Game Over!</p>\n              <h1>Tie!</h1>\n            </div>\n          )}\n          <Button onClickHandle={resetGame} content=\"Reset Game.\" />\n        </div>\n      </Wrapper>\n\n      <Table board={board} handleClick={handleClick} />\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport { Game } from \"./components/Game/Game\";\nimport \"./index.css\";\n\nfunction App() {\n  const [gameStats, setGameStats] = useState({\n    gamesPlayed: 0,\n    gamesWonBy0: 0,\n    gamesWonByX: 0,\n    ties: 0,\n  });\n\n  const updateStatsHandler = (result) => {\n    if (result === \"WIN_X\") {\n      setGameStats((prevStats) => {\n        return {\n          ...prevStats,\n          gamesPlayed: prevStats.gamesPlayed + 1,\n          gamesWonByX: prevStats.gamesWonByX + 1,\n        };\n      });\n    }\n    if (result === \"WIN_0\") {\n      setGameStats((prevStats) => {\n        return {\n          ...prevStats,\n          gamesPlayed: prevStats.gamesPlayed + 1,\n          gamesWonBy0: prevStats.gamesWonBy0 + 1,\n        };\n      });\n    }\n    if (result === \"TIE\") {\n      setGameStats((prevStats) => {\n        return {\n          ...prevStats,\n          gamesPlayed: prevStats.gamesPlayed + 1,\n          ties: prevStats.ties + 1,\n        };\n      });\n    }\n  };\n  return <Game updateStatsHandler={updateStatsHandler} gameStats={gameStats} />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}